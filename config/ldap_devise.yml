## LDAP
# auto settings
# DO NOT EDIT THIS IF YOU DO NOT UNDERSTAD IT.
<%
if Rails.env.production?
  yaml_file = Rails.root.join('config', 'ldap_production.yml')
  unless FileTest.file?(yaml_file)
    warn 'Please create config/ldap_production.yml see .sapmle.'
    raise 'Not found the LDAP config YAML file for production envrionment.'
  end
  config = YAML.safe_load(IO.read(yaml_file), [Symbol], [], true, yaml_file, symbolize_names: true)[:ldap]
  config[:username] = Rails.application.credentials.dig(:ldap, :username)
  config[:password] = Rails.application.credentials.dig(:ldap, :password)
else
  yaml_file = Rails.root.join('config', 'ldap_development_test.yml')
  config = YAML.safe_load(IO.read(yaml_file), [Symbol], [], true, yaml_file, symbolize_names: true)[:ldap]
end
%>

ldap: <%= config.to_json %>

# devise_ldap_authenticatable
authorizations: &AUTHORIZATIONS
  host: <%= config[:host].to_json %>
  port: <%= config[:port].to_json %>
  ssl: <%= (config[:encryption] || false).to_json %>
  attribute: <%= config[:user][:dn].to_json %>
  base: <%= [config[:user][:base], config[:base]].join(',').to_json %>
  group_base: <%= [config[:group][:base], config[:base]].join(',').to_json %>
<% if config[:auth] == :sipmle %>
  allow_unauthenticated_bind: false
  admin_user: <%= config[:username].to_json %>
  admin_password: <%= config[:password].to_json %>
<% else %>
  allow_unauthenticated_bind: true
<% end %>
  required_groups: <%=
    config[:restrict][:auth][:groups].map do |name|
      ["#{config[:group][:dn]}=#{name}", config[:group][:base], config[:base]].join(',')
    end.to_json
  %>
  require_attribute:
    objectClass: <%= config[:user][:class].to_json %>
  require_attribute_presence:
    mail: true

## Environment

development:
  <<: *AUTHORIZATIONS

test:
  <<: *AUTHORIZATIONS

production:
  <<: *AUTHORIZATIONS
