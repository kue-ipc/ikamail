- if @bulk_mail.errors.any?
  #error_explanation.card.border-danger.mb-2
    .card-header
      = t("messages.error_prohibited_action", action: t(controller.action_name, scope: :actions),
          count: @bulk_mail.errors.count, model: @bulk_mail.model_name.human)
    ul.list-group.list-group-flush.text-danger
      - @bulk_mail.errors.full_messages.each do |message|
        li.list-group-item = message

= bootstrap_form_with model: @bulk_mail do |f|
  .mb-3
    = f.collection_select :mail_template_id, policy_scope(MailTemplate).where(enabled: true).order(:name), :id, :name,
                          {prompt: true, wrapper_class: false},
                          {required: true}
    .form-text
      =< MailTemplate.human_attribute_name(:recipient_list)
      | :
      span.template-info-recipient-list<>
        | -
      | |
      =< MailTemplate.human_attribute_name(:reserved_time)
      | :
      span.template-info-reserved-time<>
        | -
      | |
      =< MailTemplate.human_attribute_name(:user)
      | :
      span.template-info-user<
        | -
    p.border.rounded.bg-light.template-info-description
  = f.form_group :delivery_timing, label: {text: t_attr(:delivery_timing)} do
    - BulkMail.delivery_timings.each_key do |timing|
      = f.radio_button :delivery_timing, timing, required: true,
        label: "#{t(timing, scope: 'mail.timings')}: #{t(timing, scope: 'descriptions.timings')}"
  = f.text_field :subject
  = f.text_area :body, class: "font-monospace scroll-y", rows: 20
  .row.mb-3
    .col-auto
      = f.select :wrap_col, wrap_col_collection, wrapper_class: false
    .col-auto
      = f.select :wrap_rule, wrap_rule_collection, wrapper_class: false
    small.form-text.text-muted
      = t("descriptions.word_wrap")
  = f.fields @action_info do |field|
    = field.hidden_field :current_status
    = field.text_area :comment, rows: 3, label: "#{ActionLog.human_attribute_name(:comment)} #{t('values.optional')}"
  .actions = f.submit class: "btn btn-primary"

#template-info.d-none[data-list=h(mail_template_to_hash(MailTemplate.all).to_json)
                      data-target="bulk_mail_mail_template_id"]
