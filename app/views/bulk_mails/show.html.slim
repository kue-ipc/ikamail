- content_for :heading
  h1 = t_title(:showing, count: 1)

- if @bulk_mail.errors.any?
  #error_explanation.card.border-danger.mb-2
    .card-header
      = t('messages.error_prohibited_action', action: t(controller.action_name, scope: :actions),
          count: @bulk_mail.errors.count, model: @bulk_mail.model_name.human)
    ul.list-group.list-group-flush.text-danger
      - @bulk_mail.errors.full_messages.each do |message|
        li.list-group-item = message

dl
  = dt_dd_for @bulk_mail, :subject, around: [@bulk_mail.subject_prefix, @bulk_mail.subject_suffix]
  = dt_dd_for @bulk_mail, :status, format: :translate, scope: [:mail, :statuses]
  = dt_dd_for @bulk_mail, :mail_template do |mail_template|
    = link_to mail_template.name, mail_template
    br
    =< MailTemplate.human_attribute_name(:recipient_list)
    | :
    =<> link_to mail_template.recipient_list.name, mail_template.recipient_list
    | |
    =<> MailTemplate.human_attribute_name(:reserved_time)
    | :
    =<> l(mail_template.reserved_time, format: :time)
    | |
    =<> MailTemplate.human_attribute_name(:user)
    | :
    =<> mail_template.user.name
  = dt_dd_for @bulk_mail, :body_wrap, format: :mail_body, around: [@bulk_mail.body_header, @bulk_mail.body_footer]
  = dt_dd_tag BulkMail.human_attribute_name(:word_wrap) do
    = t('helpers.wrap_cols', count: @bulk_mail.wrap_col)
    - if @bulk_mail.wrap_col.positive?
      = t(@bulk_mail.wrap_rule, scope: [:helpers, :wrap_rules])
  = dt_dd_for @bulk_mail, :delivery_timing, format: :translate, scope: [:mail, :timings]
  = dt_dd_for @bulk_mail, :reserved_at, blank_alt: ''
  = dt_dd_for @bulk_mail, :delivered_at, blank_alt: ''
  = dt_dd_for @bulk_mail, :number, blank_alt: ''
  = dt_dd_for @bulk_mail, :user

.mail-operation.d-print-none
  - bulk_mail_policy = policy(@bulk_mail)

  - if bulk_mail_policy.edit?
    =<> link_to t('actions.edit'), edit_bulk_mail_path(@bulk_mail), class: 'btn btn-primary'

  - if bulk_mail_policy.apply?
    = render partial: 'action', locals: {action: :apply, url: apply_bulk_mail_path(@bulk_mail),
                                         comment_required: false, level: 'primary',
                                         timing: @bulk_mail.delivery_timing,}

  - if bulk_mail_policy.withdraw?
    = render partial: 'action', locals: {action: :withdraw, url: withdraw_bulk_mail_path(@bulk_mail),
                                         comment_required: true, level: 'warning',}

  - if bulk_mail_policy.approve?
    = render partial: 'action', locals: {action: :approve, url: approve_bulk_mail_path(@bulk_mail),
                                         comment_required: false, level: 'primary',}

  - if bulk_mail_policy.reject?
    = render partial: 'action', locals: {action: :reject, url: reject_bulk_mail_path(@bulk_mail),
                                         comment_required: true, level: 'warning',}

  - if bulk_mail_policy.deliver?
    = render partial: 'action', locals: {action: :deliver, url: deliver_bulk_mail_path(@bulk_mail),
                                         comment_required: false, level: 'primary',}

  - if bulk_mail_policy.reserve?
    = render partial: 'action', locals: {action: :reserve, url: reserve_bulk_mail_path(@bulk_mail),
                                         add_datetime: true, level: 'secondary',}

  - if bulk_mail_policy.cancel?
    = render partial: 'action', locals: {action: :cancel, url: cancel_bulk_mail_path(@bulk_mail),
                                         comment_required: true, level: 'warning',}

  - if bulk_mail_policy.discard?
    = render partial: 'action', locals: {action: :discard, url: discard_bulk_mail_path(@bulk_mail),
                                         comment_required: false, level: 'danger',}

  - if bulk_mail_policy.destroy?
    =<> link_to t('actions.destroy'), @bulk_mail,
      class: 'btn btn-danger', data: {confirm: t('messages.corfirm_destroy')}, method: :delete

.mail-histroy.d-print-none
  hr
  h4 履歴
  table.table.table-sm
    - @bulk_mail.action_logs.includes(:user).order(created_at: :desc).each do |log|
      tr
        td = t(log.action, scope: :actions)
        td = l(log.created_at, format: :short)
        td = log.user&.name || '(system)'
        td
          pre.my-0
            = log.comment
